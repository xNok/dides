// Code generated by MockGen. DO NOT EDIT.
// Source: strategy.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	deployment "github.com/xnok/dides/internal/deployment"
)

// MockDeploymentStrategy is a mock of DeploymentStrategy interface.
type MockDeploymentStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockDeploymentStrategyMockRecorder
}

// MockDeploymentStrategyMockRecorder is the mock recorder for MockDeploymentStrategy.
type MockDeploymentStrategyMockRecorder struct {
	mock *MockDeploymentStrategy
}

// NewMockDeploymentStrategy creates a new mock instance.
func NewMockDeploymentStrategy(ctrl *gomock.Controller) *MockDeploymentStrategy {
	mock := &MockDeploymentStrategy{ctrl: ctrl}
	mock.recorder = &MockDeploymentStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeploymentStrategy) EXPECT() *MockDeploymentStrategyMockRecorder {
	return m.recorder
}

// ProgressDeployment mocks base method.
func (m *MockDeploymentStrategy) ProgressDeployment(ctx context.Context, record *deployment.DeploymentRecord) (*deployment.DeploymentRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProgressDeployment", ctx, record)
	ret0, _ := ret[0].(*deployment.DeploymentRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ProgressDeployment indicates an expected call of ProgressDeployment.
func (mr *MockDeploymentStrategyMockRecorder) ProgressDeployment(ctx, record interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProgressDeployment", reflect.TypeOf((*MockDeploymentStrategy)(nil).ProgressDeployment), ctx, record)
}

// ResetFailedInstances mocks base method.
func (m *MockDeploymentStrategy) ResetFailedInstances(labels map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetFailedInstances", labels)
	ret0, _ := ret[0].(error)
	return ret0
}

// ResetFailedInstances indicates an expected call of ResetFailedInstances.
func (mr *MockDeploymentStrategyMockRecorder) ResetFailedInstances(labels interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetFailedInstances", reflect.TypeOf((*MockDeploymentStrategy)(nil).ResetFailedInstances), labels)
}

// StartDeployment mocks base method.
func (m *MockDeploymentStrategy) StartDeployment(record *deployment.DeploymentRecord) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartDeployment", record)
	ret0, _ := ret[0].(error)
	return ret0
}

// StartDeployment indicates an expected call of StartDeployment.
func (mr *MockDeploymentStrategyMockRecorder) StartDeployment(record interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartDeployment", reflect.TypeOf((*MockDeploymentStrategy)(nil).StartDeployment), record)
}
